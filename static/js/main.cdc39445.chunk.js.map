{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","Fragment","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","placeholder","role","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdc39445.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (<React.Fragment>\n    <nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n      <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Link</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link disabled\" href=\"#\">Disabled</a>\n          </li>\n          <li class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle\" href=\"http://example.com\" id=\"dropdown01\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n              <a class=\"dropdown-item\" href=\"#\">Action</a>\n              <a class=\"dropdown-item\" href=\"#\">Another action</a>\n              <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n            </div>\n          </li>\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0\">\n          <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"/>\n          <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n      </div>\n    </nav>\n\n    <main role=\"main\">\n\n      {/*<-- Main jumbotron for a primary marketing message or call to action -->*/}\n      <div class=\"jumbotron\">\n        <div class=\"container\">\n          <h1 class=\"display-3\">Curry and Rice</h1>\n          <p>Recipe for somewhat traditional Curry (ied beef) and Rice recipe modified by my mom and I</p>\n        </div>\n      </div>\n\n      <div class=\"container\">\n        {/*<!-- Example row of columns -->*/}\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <h2>1</h2>\n            <p> \n              Braise the onions and spices in the hot oil. <br/> Remove half the onions from the pan and set aside.\n            </p>\n          </div>\n          <div class=\"col-md-4\">\n            <p> 1 Onion </p>\n            <p> 0.45 Garlic Clove </p>\n            <p> 2.68 mL Ginger </p>\n            <p> 11.15 mL Oil </p>\n            <p> 8.48 mL Curry </p>\n            <p> 17.84g Coriander </p>\n            <p> 2mL Turmuric </p>\n            <p> 2.68mL Cumin </p>\n            <p> 1.34 mL Pepper </p>\n          </div>\n        </div>\n        <hr/>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <h2>2</h2>\n            <p> \n              Add the meat, stir and simmer slowly until brown. <br/> \n              Add enough hot water so it comes 2.5cm up the sides of the sauce pan.\n            </p>\n          </div>\n          <div class=\"col-md-4\">\n            <p> 670g Ground beef </p>\n          </div>\n        </div>\n        <hr/>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <h2>3</h2>\n            <p> \n              Mix the remaining ingredients (including the onions), and add to the meat. <br/> \n              Simmer for about 1.5 hours or until the meat is tender.\n            </p>\n          </div>\n          <div class=\"col-md-4\">\n            <p> 130g Potatoes </p>\n            <p> 130g Carrots </p>\n            <p> .5tsp sticks of Cinnamon </p>\n            <p> 1tsp Salt </p>\n            <p> .5tsp Cardamom seeds </p>\n            <p> 1tsp Cake Flour </p>\n            <p> 1tsp Sugar </p>\n            <p> 2tbsp Vinegar </p>\n          </div>\n        </div>\n        <hr/>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <h2>4</h2>\n            <p> \n              Serve with beans, rice and chutney\n            </p>\n          </div>\n          <div class=\"col-md-4\">\n            <p>Chutney</p>\n            <p>Rice</p>\n            <p> 1 can Beans (maybe more) </p>\n          </div>\n        </div>\n\n        <hr/>\n\n      </div> \n\n    </main>\n\n    <footer class=\"container\">\n      <p>Website made with <span role=\"img\" aria-label=\"burrito\">ðŸŒ¯</span> by Wynand</p>\n    </footer>\n    </React.Fragment>);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}